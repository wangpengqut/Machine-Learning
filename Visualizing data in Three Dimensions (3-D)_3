# Visualizing 3-D mix data using violin plots
# leveraging the concepts of hue and axes for > 1 categorical dimensions
import seaborn as sns
f, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 4))
f.suptitle('Diameter - Voltage - Speed', fontsize=14)

sns.violinplot(x="voltage", y="diameter",
               data=df, inner="quart", linewidth=1.3,ax=ax1)
ax1.set_xlabel("Voltage",size = 12,alpha=0.8)
ax1.set_ylabel("Diameter",size = 12,alpha=0.8)

plt.savefig('C:/...Pictures/3D_4.png', dpi=300)
plt.show()

sns.violinplot(x="voltage", y="diameter", hue="CUR", 
               data=df, split=True, inner="quart", linewidth=1.3,
               palette={"Y": "#FF9999", "N": "white"}, ax=ax2)
ax2.set_xlabel("Voltage",size = 12,alpha=0.8)
ax2.set_ylabel("Diameter",size = 12,alpha=0.8)
l = plt.legend(loc='upper right', title='Curved Type')
plt.savefig('C:/...Pictures/3D_4.png', dpi=300)

# Visualizing 3-D mix data using box plots
# leveraging the concepts of hue and axes for > 1 categorical dimensions
f, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 4))
f.suptitle('Curved Type - Voltage - Diameter', fontsize=14)

sns.boxplot(x="voltage", y="diameter", hue="CUR",
               data=df, palette={"N": "#F08200", "Y": "#82CDD0"}, ax=ax1)
ax1.set_xlabel("Voltage",size = 12,alpha=0.8)
ax1.set_ylabel("Diameter",size = 12,alpha=0.8)

sns.boxplot(x="curved", y="diameter", hue="CUR",
               data=df, palette={"N": "#F08200", "Y": "#82CDD0"}, ax=ax2)
ax2.set_xlabel("Curved Phenomenon",size = 12,alpha=0.8)
ax2.set_ylabel("Diameter",size = 12,alpha=0.8)
l = plt.legend(loc='best', title='Curved Type')
# Visualizing 3-D mix data using box plots
# leveraging the concepts of hue and axes for > 1 categorical dimensions
f, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 4))
f.suptitle('Curved Type - Voltage - Diameter', fontsize=14)

sns.boxplot(x="voltage", y="diameter", hue="CUR",
               data=df, palette={"N": "#F08200", "Y": "#82CDD0"}, ax=ax1)
ax1.set_xlabel("Voltage",size = 12,alpha=0.8)
ax1.set_ylabel("Diameter",size = 12,alpha=0.8)

sns.boxplot(x="curved", y="diameter", hue="CUR",
               data=df, palette={"N": "#F08200", "Y": "#82CDD0"}, ax=ax2)
ax2.set_xlabel("Curved Phenomenon",size = 12,alpha=0.8)
ax2.set_ylabel("Diameter",size = 12,alpha=0.8)
l = plt.legend(loc='best', title='Curved Type')
plt.savefig('E:/P Data/Data anylsis by ML/Pictures/3D_5.png', dpi=300)
plt.show()
plt.show()
